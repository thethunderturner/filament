<?php

use Filament\Forms\Components\Tabs;
use Filament\Forms\Components\Tabs\Tab;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Form;
use Filament\Forms\Get;
use Filament\Forms\Set;
use Filament\Infolists\Components\ImageEntry;
use Filament\Notifications\Notification;
use Filament\Tables\Columns\TextColumn;
use Filament\Tables\Table;

$setFullName = fn (Get $get, Set $set) => $set('full_name', $get('first_name') . ' ' . $get('last_name');

return [
    Header::make('Edit profile')
        ->description('Update your profile information.'),
    Form::make()
        ->schema([
            TextInput::make('first_name')
                ->required()
                ->live(render: ['full_name'])
                ->afterStateUpdated($setFullName),
            TextInput::make('last_name')
                ->required()
                ->live(render: ['full_name', 'email'])
                ->afterStateUpdated($setFullName),
            TextInput::make('full_name')
                ->required(),
            TextInput::make('email')
                ->required()
                ->live(render: ['envelope_preview', 'avatar_preview']),
            View::make('envelope_preview')
                ->view('components.envelope_preview')
                ->data(fn (Get $get) => [
                    'email' => $get('email'),
                ]),
            ImageEntry::make('avatar_preview')
                ->state(fn (Get $get) => $get('email'))
        ])
        ->footerActions([
            Action::make('save')
                ->action(function (array $data) {
                    auth()->user()->update($data);

                    Notification::make()
                        ->title('Profile updated')
                        ->success()
                        ->send();
                }),
            Action::make('cancel')
                ->back(),
        ]),
    Tabs::make()
        ->tabs([
            Tab::make('Teams')
                ->schema([
                    Table::make()
                        ->relationship(fn () => auth()->user()->teams())
                        ->columns([
                            TextColumn::make('name')
                                ->searchable()
                                ->sortable(),
                            TextColumn::make('users_count')
                                ->counts('users')
                                ->sortable(),
                        ])
                        ->filters([
                            // ...
                        ])
                        ->defaultSort('name'),
                ]),
            Tab::make('Posts')
                ->schema([
                    Table::make()
                        ->relationship(fn () => auth()->user()->posts())
                        ->columns([
                            TextColumn::make('title')
                                ->searchable()
                                ->sortable(),
                        ]),
                ]),
        ]),
];
